import React,{useState} from 'react';
import xIcon from '../../assets/images/icons/x-icon.svg'
import ChartType1 from "../chart-type1";
import TimeButtons from "../time-buttons";
import DatePicker from "react-datepicker";
import nft2 from '../../assets/images/nft/nft2.png';
import PopupList1 from "../popup-list1";
import PopupTable1 from "../popup-table1";
import nft1 from '../../assets/images/nft/nft1.png';
const PopupFollowers = (props) => {
    const [view,setView] = useState('home');
    const [startDate, setStartDate] = useState(new Date());

    return (
        <div className='popup'>
            <img src={xIcon} alt="close icon" className='closeIcon' onClick={()=>{props.setPopupFollowers(false)}}
                 />
            <div className="wrapper">
                <div className="followers-home-content">
                    <img src={nft1} alt="nft"/>
                    <p className="title">
                        CryptoPunks
                        <svg width="16" className='ms-2' height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M15.3334 8L13.7067 6.14L13.9334 3.68L11.5267 3.13333L10.2667 1L8.00008 1.97333L5.73341 1L4.47341 3.12667L2.06675 3.66667L2.29341 6.13333L0.666748 8L2.29341 9.86L2.06675 12.3267L4.47341 12.8733L5.73341 15L8.00008 14.02L10.2667 14.9933L11.5267 12.8667L13.9334 12.32L13.7067 9.86L15.3334 8ZM6.25341 10.6733L4.66675 9.07333C4.60495 9.01166 4.55591 8.9384 4.52246 8.85775C4.48901 8.7771 4.47179 8.69065 4.47179 8.60333C4.47179 8.51602 4.48901 8.42957 4.52246 8.34892C4.55591 8.26827 4.60495 8.19501 4.66675 8.13333L4.71341 8.08667C4.97341 7.82667 5.40008 7.82667 5.66008 8.08667L6.73341 9.16667L10.1667 5.72667C10.4267 5.46667 10.8534 5.46667 11.1134 5.72667L11.1601 5.77333C11.4201 6.03333 11.4201 6.45333 11.1601 6.71333L7.21341 10.6733C6.94008 10.9333 6.52008 10.9333 6.25341 10.6733Z" fill="#2081E2"/>
                        </svg>
                    </p>
                    <div className="statisticWrapper">
                        <div className="item">
                            <div className="title">Tweets</div>
                            <div className="count">1,546</div>
                        </div>
                        <div className="item">
                            <div className="title">Followers</div>
                            <div className="count">162.235</div>
                        </div>
                        <div className="item">
                            <div className="title">Following</div>
                            <div className="count">371</div>
                        </div>
                    </div>
                    <div className="detailsWrapper">
                        <p className="item">Followers Quality Score:<span className='ms-2'>451</span></p>
                        <p className="item">Tweets Quality Score:<span className='ms-2'>4653</span></p>
                        <p className="item">Joined::<span className='ms-2'>Agust 2009</span></p>
                    </div>
                </div>
                <div className="navWrapper">
                    {
                        view !== 'home' ?  <div className="tabs">
                            <div onClick={()=>{setView('home')}} className={`item ${view === 'home' ? 'active' : ''}`}>
                                <svg width="20" height="21" viewBox="0 0 20 21" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M6.10002 12.2999C6.44481 12.2999 6.77547 12.1629 7.01926 11.9191C7.26306 11.6753 7.40002 11.3447 7.40002 10.9999C7.40002 10.6551 7.26306 10.3244 7.01926 10.0806C6.77547 9.83684 6.44481 9.69988 6.10002 9.69988C5.75524 9.69988 5.42458 9.83684 5.18079 10.0806C4.93699 10.3244 4.80002 10.6551 4.80002 10.9999C4.80002 11.3447 4.93699 11.6753 5.18079 11.9191C5.42458 12.1629 5.75524 12.2999 6.10002 12.2999ZM10 12.2999C10.3448 12.2999 10.6755 12.1629 10.9193 11.9191C11.1631 11.6753 11.3 11.3447 11.3 10.9999C11.3 10.6551 11.1631 10.3244 10.9193 10.0806C10.6755 9.83684 10.3448 9.69988 10 9.69988C9.65524 9.69988 9.32458 9.83684 9.08079 10.0806C8.83699 10.3244 8.70002 10.6551 8.70002 10.9999C8.70002 11.3447 8.83699 11.6753 9.08079 11.9191C9.32458 12.1629 9.65524 12.2999 10 12.2999V12.2999ZM15.2 10.9999C15.2 11.3447 15.0631 11.6753 14.8193 11.9191C14.5755 12.1629 14.2448 12.2999 13.9 12.2999C13.5552 12.2999 13.2246 12.1629 12.9808 11.9191C12.737 11.6753 12.6 11.3447 12.6 10.9999C12.6 10.6551 12.737 10.3244 12.9808 10.0806C13.2246 9.83684 13.5552 9.69988 13.9 9.69988C14.2448 9.69988 14.5755 9.83684 14.8193 10.0806C15.0631 10.3244 15.2 10.6551 15.2 10.9999V10.9999ZM6.10002 16.1999C6.44481 16.1999 6.77547 16.0629 7.01926 15.8191C7.26306 15.5753 7.40002 15.2447 7.40002 14.8999C7.40002 14.5551 7.26306 14.2244 7.01926 13.9806C6.77547 13.7368 6.44481 13.5999 6.10002 13.5999C5.75524 13.5999 5.42458 13.7368 5.18079 13.9806C4.93699 14.2244 4.80002 14.5551 4.80002 14.8999C4.80002 15.2447 4.93699 15.5753 5.18079 15.8191C5.42458 16.0629 5.75524 16.1999 6.10002 16.1999ZM11.3 14.8999C11.3 15.2447 11.1631 15.5753 10.9193 15.8191C10.6755 16.0629 10.3448 16.1999 10 16.1999C9.65524 16.1999 9.32458 16.0629 9.08079 15.8191C8.83699 15.5753 8.70002 15.2447 8.70002 14.8999C8.70002 14.5551 8.83699 14.2244 9.08079 13.9806C9.32458 13.7368 9.65524 13.5999 10 13.5999C10.3448 13.5999 10.6755 13.7368 10.9193 13.9806C11.1631 14.2244 11.3 14.5551 11.3 14.8999V14.8999ZM13.9 16.1999C14.2448 16.1999 14.5755 16.0629 14.8193 15.8191C15.0631 15.5753 15.2 15.2447 15.2 14.8999C15.2 14.5551 15.0631 14.2244 14.8193 13.9806C14.5755 13.7368 14.2448 13.5999 13.9 13.5999C13.5552 13.5999 13.2246 13.7368 12.9808 13.9806C12.737 14.2244 12.6 14.5551 12.6 14.8999C12.6 15.2447 12.737 15.5753 12.9808 15.8191C13.2246 16.0629 13.5552 16.1999 13.9 16.1999V16.1999ZM8.69743 1.09908C9.05534 0.777503 9.51951 0.599609 10.0007 0.599609C10.4818 0.599609 10.946 0.777503 11.3039 1.09908L18.4539 7.52498C18.6574 7.70794 18.8201 7.93167 18.9314 8.18162C19.0427 8.43158 19.1001 8.70216 19.1 8.97578V18.1499C19.1 18.667 18.8946 19.163 18.5289 19.5287C18.1632 19.8944 17.6672 20.0999 17.15 20.0999H2.85002C2.33285 20.0999 1.83686 19.8944 1.47117 19.5287C1.10547 19.163 0.900024 18.667 0.900024 18.1499V8.97578C0.900024 8.42328 1.13402 7.89548 1.54742 7.52498L8.69743 1.09908V1.09908ZM10.4342 2.06628C10.3149 1.95921 10.1603 1.89998 10 1.89998C9.83974 1.89998 9.6851 1.95921 9.56583 2.06628L2.41582 8.49218C2.34793 8.55313 2.29362 8.62769 2.25644 8.71101C2.21926 8.79432 2.20004 8.88454 2.20002 8.97578V18.1499C2.20002 18.3223 2.26851 18.4876 2.39041 18.6095C2.5123 18.7314 2.67763 18.7999 2.85002 18.7999H17.15C17.3224 18.7999 17.4877 18.7314 17.6096 18.6095C17.7315 18.4876 17.8 18.3223 17.8 18.1499V8.97578C17.8 8.88454 17.7808 8.79432 17.7436 8.71101C17.7064 8.62769 17.6521 8.55313 17.5842 8.49218L10.4342 2.06628Z" fill="#666666"/>
                                </svg>
                            </div>
                            <div onClick={()=>{setView('table')}} className={`item ${view === 'table' ? 'active' : ''}`}>
                                <svg width="21" height="20" viewBox="0 0 21 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <g clip-path="url(#clip0_2_10)">
                                        <path d="M0.180664 2.5C0.180664 1.83696 0.444056 1.20107 0.912897 0.732233C1.38174 0.263392 2.01762 0 2.68066 0L17.6807 0C18.3437 0 18.9796 0.263392 19.4484 0.732233C19.9173 1.20107 20.1807 1.83696 20.1807 2.5V17.5C20.1807 18.163 19.9173 18.7989 19.4484 19.2678C18.9796 19.7366 18.3437 20 17.6807 20H2.68066C2.01762 20 1.38174 19.7366 0.912897 19.2678C0.444056 18.7989 0.180664 18.163 0.180664 17.5V2.5ZM18.9307 5H13.9307V8.75H18.9307V5ZM18.9307 10H13.9307V13.75H18.9307V10ZM18.9307 15H13.9307V18.75H17.6807C18.0122 18.75 18.3301 18.6183 18.5645 18.3839C18.799 18.1495 18.9307 17.8315 18.9307 17.5V15ZM12.6807 18.75V15H7.68066V18.75H12.6807ZM6.43066 18.75V15H1.43066V17.5C1.43066 17.8315 1.56236 18.1495 1.79678 18.3839C2.0312 18.6183 2.34914 18.75 2.68066 18.75H6.43066ZM1.43066 13.75H6.43066V10H1.43066V13.75ZM1.43066 8.75H6.43066V5H1.43066V8.75ZM7.68066 5V8.75H12.6807V5H7.68066ZM12.6807 10H7.68066V13.75H12.6807V10Z" fill="#666666"/>
                                    </g>
                                    <defs>
                                        <clipPath id="clip0_2_10">
                                            <rect width="20" height="20" fill="white" transform="translate(0.180664)"/>
                                        </clipPath>
                                    </defs>
                                </svg>
                            </div>
                            <div onClick={()=>{setView('chart')}} className={`item ${view === 'chart' ? 'active' : ''}`}>
                                <svg width="23" height="20" viewBox="0 0 23 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <g clipPath="url(#clip0_2_7)">
                                        <path d="M12.5197 4.94976L12.5197 5.83169L16.4442 5.83171L7.73846 14.5374L8.3621 15.1611L17.0678 6.45535L17.0678 10.3798L17.9498 10.3798L17.9498 4.94974L12.5197 4.94976Z" fill="#666666"/>
                                    </g>
                                    <line x1="4.35355" y1="10.5459" x2="8.35355" y2="14.5459" stroke="#666666"/>
                                    <line x1="4.35355" y1="11.253" x2="0.353554" y2="15.253" stroke="#666666"/>
                                    <defs>
                                        <clipPath id="clip0_2_7">
                                            <rect width="14" height="14" fill="white" transform="translate(3.10052 9.8995) rotate(-45)"/>
                                        </clipPath>
                                    </defs>
                                </svg>
                            </div>
                        </div> : ''
                    }

                    {
                        view !== 'home' ? <div className="timeButtonsContainer with-datepicker">
                            <TimeButtons/>
                            <DatePicker className="date-picker-label"
                                        selected={startDate}
                                        dateFormat="MMM dd"
                                        onChange={(date) => setStartDate(date)} />
                        </div> : ''
                    }
                </div>
                <div className="info">
                    {
                        view !== 'home' ?
                        <div className="nft">
                            <img src={nft2} alt="" className='nftImage'/>
                            <div className="text">
                                <h5 className="title">Bored Ape Yacht Club</h5>
                                <h6 className='subTitle'>(Number in Collection)</h6>
                            </div>
                        </div> : <div className="navWrapper">
                                <div className="tabs">
                                    <span className='me-3'>Followers</span>
                                    <div onClick={()=>{setView('home')}} className={`item ${view === 'home' ? 'active' : ''}`}>
                                        <svg width="20" height="21" viewBox="0 0 20 21" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <path d="M6.10002 12.2999C6.44481 12.2999 6.77547 12.1629 7.01926 11.9191C7.26306 11.6753 7.40002 11.3447 7.40002 10.9999C7.40002 10.6551 7.26306 10.3244 7.01926 10.0806C6.77547 9.83684 6.44481 9.69988 6.10002 9.69988C5.75524 9.69988 5.42458 9.83684 5.18079 10.0806C4.93699 10.3244 4.80002 10.6551 4.80002 10.9999C4.80002 11.3447 4.93699 11.6753 5.18079 11.9191C5.42458 12.1629 5.75524 12.2999 6.10002 12.2999ZM10 12.2999C10.3448 12.2999 10.6755 12.1629 10.9193 11.9191C11.1631 11.6753 11.3 11.3447 11.3 10.9999C11.3 10.6551 11.1631 10.3244 10.9193 10.0806C10.6755 9.83684 10.3448 9.69988 10 9.69988C9.65524 9.69988 9.32458 9.83684 9.08079 10.0806C8.83699 10.3244 8.70002 10.6551 8.70002 10.9999C8.70002 11.3447 8.83699 11.6753 9.08079 11.9191C9.32458 12.1629 9.65524 12.2999 10 12.2999V12.2999ZM15.2 10.9999C15.2 11.3447 15.0631 11.6753 14.8193 11.9191C14.5755 12.1629 14.2448 12.2999 13.9 12.2999C13.5552 12.2999 13.2246 12.1629 12.9808 11.9191C12.737 11.6753 12.6 11.3447 12.6 10.9999C12.6 10.6551 12.737 10.3244 12.9808 10.0806C13.2246 9.83684 13.5552 9.69988 13.9 9.69988C14.2448 9.69988 14.5755 9.83684 14.8193 10.0806C15.0631 10.3244 15.2 10.6551 15.2 10.9999V10.9999ZM6.10002 16.1999C6.44481 16.1999 6.77547 16.0629 7.01926 15.8191C7.26306 15.5753 7.40002 15.2447 7.40002 14.8999C7.40002 14.5551 7.26306 14.2244 7.01926 13.9806C6.77547 13.7368 6.44481 13.5999 6.10002 13.5999C5.75524 13.5999 5.42458 13.7368 5.18079 13.9806C4.93699 14.2244 4.80002 14.5551 4.80002 14.8999C4.80002 15.2447 4.93699 15.5753 5.18079 15.8191C5.42458 16.0629 5.75524 16.1999 6.10002 16.1999ZM11.3 14.8999C11.3 15.2447 11.1631 15.5753 10.9193 15.8191C10.6755 16.0629 10.3448 16.1999 10 16.1999C9.65524 16.1999 9.32458 16.0629 9.08079 15.8191C8.83699 15.5753 8.70002 15.2447 8.70002 14.8999C8.70002 14.5551 8.83699 14.2244 9.08079 13.9806C9.32458 13.7368 9.65524 13.5999 10 13.5999C10.3448 13.5999 10.6755 13.7368 10.9193 13.9806C11.1631 14.2244 11.3 14.5551 11.3 14.8999V14.8999ZM13.9 16.1999C14.2448 16.1999 14.5755 16.0629 14.8193 15.8191C15.0631 15.5753 15.2 15.2447 15.2 14.8999C15.2 14.5551 15.0631 14.2244 14.8193 13.9806C14.5755 13.7368 14.2448 13.5999 13.9 13.5999C13.5552 13.5999 13.2246 13.7368 12.9808 13.9806C12.737 14.2244 12.6 14.5551 12.6 14.8999C12.6 15.2447 12.737 15.5753 12.9808 15.8191C13.2246 16.0629 13.5552 16.1999 13.9 16.1999V16.1999ZM8.69743 1.09908C9.05534 0.777503 9.51951 0.599609 10.0007 0.599609C10.4818 0.599609 10.946 0.777503 11.3039 1.09908L18.4539 7.52498C18.6574 7.70794 18.8201 7.93167 18.9314 8.18162C19.0427 8.43158 19.1001 8.70216 19.1 8.97578V18.1499C19.1 18.667 18.8946 19.163 18.5289 19.5287C18.1632 19.8944 17.6672 20.0999 17.15 20.0999H2.85002C2.33285 20.0999 1.83686 19.8944 1.47117 19.5287C1.10547 19.163 0.900024 18.667 0.900024 18.1499V8.97578C0.900024 8.42328 1.13402 7.89548 1.54742 7.52498L8.69743 1.09908V1.09908ZM10.4342 2.06628C10.3149 1.95921 10.1603 1.89998 10 1.89998C9.83974 1.89998 9.6851 1.95921 9.56583 2.06628L2.41582 8.49218C2.34793 8.55313 2.29362 8.62769 2.25644 8.71101C2.21926 8.79432 2.20004 8.88454 2.20002 8.97578V18.1499C2.20002 18.3223 2.26851 18.4876 2.39041 18.6095C2.5123 18.7314 2.67763 18.7999 2.85002 18.7999H17.15C17.3224 18.7999 17.4877 18.7314 17.6096 18.6095C17.7315 18.4876 17.8 18.3223 17.8 18.1499V8.97578C17.8 8.88454 17.7808 8.79432 17.7436 8.71101C17.7064 8.62769 17.6521 8.55313 17.5842 8.49218L10.4342 2.06628Z" fill="#666666"/>
                                        </svg>
                                    </div>
                                    <div onClick={()=>{setView('table')}} className={`item ${view === 'table' ? 'active' : ''}`}>
                                        <svg width="21" height="20" viewBox="0 0 21 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <g clip-path="url(#clip0_2_10)">
                                                <path d="M0.180664 2.5C0.180664 1.83696 0.444056 1.20107 0.912897 0.732233C1.38174 0.263392 2.01762 0 2.68066 0L17.6807 0C18.3437 0 18.9796 0.263392 19.4484 0.732233C19.9173 1.20107 20.1807 1.83696 20.1807 2.5V17.5C20.1807 18.163 19.9173 18.7989 19.4484 19.2678C18.9796 19.7366 18.3437 20 17.6807 20H2.68066C2.01762 20 1.38174 19.7366 0.912897 19.2678C0.444056 18.7989 0.180664 18.163 0.180664 17.5V2.5ZM18.9307 5H13.9307V8.75H18.9307V5ZM18.9307 10H13.9307V13.75H18.9307V10ZM18.9307 15H13.9307V18.75H17.6807C18.0122 18.75 18.3301 18.6183 18.5645 18.3839C18.799 18.1495 18.9307 17.8315 18.9307 17.5V15ZM12.6807 18.75V15H7.68066V18.75H12.6807ZM6.43066 18.75V15H1.43066V17.5C1.43066 17.8315 1.56236 18.1495 1.79678 18.3839C2.0312 18.6183 2.34914 18.75 2.68066 18.75H6.43066ZM1.43066 13.75H6.43066V10H1.43066V13.75ZM1.43066 8.75H6.43066V5H1.43066V8.75ZM7.68066 5V8.75H12.6807V5H7.68066ZM12.6807 10H7.68066V13.75H12.6807V10Z" fill="#666666"/>
                                            </g>
                                            <defs>
                                                <clipPath id="clip0_2_10">
                                                    <rect width="20" height="20" fill="white" transform="translate(0.180664)"/>
                                                </clipPath>
                                            </defs>
                                        </svg>
                                    </div>
                                    <div onClick={()=>{setView('chart')}} className={`item ${view === 'chart' ? 'active' : ''}`}>
                                        <svg width="23" height="20" viewBox="0 0 23 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <g clipPath="url(#clip0_2_7)">
                                                <path d="M12.5197 4.94976L12.5197 5.83169L16.4442 5.83171L7.73846 14.5374L8.3621 15.1611L17.0678 6.45535L17.0678 10.3798L17.9498 10.3798L17.9498 4.94974L12.5197 4.94976Z" fill="#666666"/>
                                            </g>
                                            <line x1="4.35355" y1="10.5459" x2="8.35355" y2="14.5459" stroke="#666666"/>
                                            <line x1="4.35355" y1="11.253" x2="0.353554" y2="15.253" stroke="#666666"/>
                                            <defs>
                                                <clipPath id="clip0_2_7">
                                                    <rect width="14" height="14" fill="white" transform="translate(3.10052 9.8995) rotate(-45)"/>
                                                </clipPath>
                                            </defs>
                                        </svg>
                                    </div>
                                </div>
                            </div>
                    }
                    {
                        view !== 'chart' ?  <div className="popupSearchWrapper">
                            <input type="text" placeholder='Search'/>
                        </div> : ''
                    }
                </div>

                {view === 'chart' ? <ChartType1 type={'single'}/>  : ''}
                {view === 'home'  ? <PopupList1/>  : ''}
                {view === 'table' ? <PopupTable1/> : ''}
            </div>
            {
                view !== 'chart' ?
                    <div className="d-flex w-100 justify-content-end my-2">
                        <button className="popupNavButtons">
                            <svg width="12" height="12" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M10.667 6L1.33366 6" stroke="#C4C4C4" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                <path d="M6 10.6667L1.33333 6.00008L6 1.33341" stroke="#C4C4C4" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                        </button>
                        <button className="popupNavButtons">
                            <svg width="12" height="12" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M1.33301 6L10.6663 6" stroke="#666666" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                <path d="M6 1.33325L10.6667 5.99992L6 10.6666" stroke="#666666" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                        </button>
                    </div> : ''
            }
        </div>
    );
};

export default PopupFollowers;